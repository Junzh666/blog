import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as l,b as s,d as n,e,f as t}from"./app-v2FQJYry.js";const c={},r=s("h2",{id:"在内存受限的环境中运行",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#在内存受限的环境中运行","aria-hidden":"true"},"#"),n(" 在内存受限的环境中运行")],-1),u=s("p",null,"在启用所有功能的情况下运行时，GitLab 需要大量内存。有一些用例，例如在不需要所有功能的较小安装上运行GitLab。例子包括：",-1),d=s("ul",null,[s("li",null,"运行GitLab 供个人使用或非常小的团队使用。"),s("li",null,"使用云提供商上的小实例来节省成本。"),s("li",null,"使用资源受限的设备，如 Raspberry PI。")],-1),k={href:"https://docs.gitlab.cn/jh/install/requirements.html",target:"_blank",rel:"noopener noreferrer"},b=t('<p>以下部分包含允许在不满足最低要求的环境中运行的建议。虽然大多数部件在这些设置到位后应该可以正常工作，但您可能会遇到产品功能和性能的意外降级。您应该能够与最多 5 个开发人员一起运行 GitLab，并且单个 Git 项目不超过 100MB。</p><h2 id="受限环境的最低要求" tabindex="-1"><a class="header-anchor" href="#受限环境的最低要求" aria-hidden="true">#</a> 受限环境的最低要求</h2><p>可以运行 GitLab 的最低预期规格是：</p><ul><li>基于 Linux 的系统（最好基于 Debian 或基于 RedHat）</li><li>4 个 ARM7/ARM64 CPU 内核或 1 个 AMD64 架构 CPU 内核</li><li>最低 2GB RAM + 1GB SWAP，最佳为 2.5GB RAM + 1GB SWAP</li><li>20GB 可用存储空间</li></ul><p>以上列表中，CPU 的单核性能和存储的随机 I/O 性能影响最大。存储尤其重要，因为在受限环境中，我们预计会发生一定量的内存交换，这会给使用过的磁盘带来更大的压力。小平台性能有限的一个常见问题是磁盘存储速度非常慢，这会导致系统范围的瓶颈。</p><p>使用这些最小设置，系统应该在常规操作期间使用 swap。由于并非所有组件都同时使用，因此它应该提供可接受的性能。</p><h2 id="验证系统的性能" tabindex="-1"><a class="header-anchor" href="#验证系统的性能" aria-hidden="true">#</a> 验证系统的性能</h2>',7),m={href:"https://github.com/ThomasKaiser/sbc-bench",target:"_blank",rel:"noopener noreferrer"},g=s("p",null,"这些系统提供足够的性能来运行GitLab 的小型安装：",-1),v={href:"https://www.raspberrypi.com/products/raspberry-pi-4-model-b/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.digitalocean.com/pricing",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.scaleway.com/en/pricing/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://cloud.google.com/compute/docs/machine-types",target:"_blank",rel:"noopener noreferrer"},f=s("h2",{id:"配置-swap",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#配置-swap","aria-hidden":"true"},"#"),n(" 配置 Swap")],-1),G=s("p",null,"在安装 GitLab 之前，您需要配置 swap。Swap 是磁盘上的专用空间，在物理 RAM 已满时使用。当 Linux 系统耗尽 RAM 时，非活动页面将从 RAM 移动到交换空间。",-1),L=s("p",null,"交换使用通常被认为是一个问题，因为它会增加延迟。但是，由于 GitLab 的运作方式，分配的大部分内存不会被频繁访问。使用 swap 允许应用程序正常运行和运行，并且只偶尔使用 swap。",-1),x=s("p",null,"一般准则是将交换配置为可用内存的 50% 左右。对于内存受限的环境，建议为系统配置至少 1GB 的交换空间。有许多关于如何做到这一点的指南：",-1),w={href:"https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://linuxize.com/post/how-to-add-swap-space-on-centos-7/",target:"_blank",rel:"noopener noreferrer"},A=t(`<p>配置后，您应该验证交换是否已正确启用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">free</span> <span class="token parameter variable">-h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:          <span class="token number">1</span>.9Gi       115Mi       <span class="token number">1</span>.4Gi       <span class="token number">0</span>.0Ki       475Mi       <span class="token number">1</span>.6Gi
Swap:         <span class="token number">1</span>.0Gi          0B       <span class="token number">1</span>.0Gi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您还可以通过调整 <code>/proc/sys/vm/swappiness</code> 来配置系统使用 swap 空间的频率。 Swappiness 范围在 <code>0</code> 和 <code>100</code> 之间。 默认值为 <code>60</code>。较低的值降低了 Linux 对释放匿名内存页面并将它们写入交换的偏好，但它增加了对文件支持页面执行相同操作的偏好：</p><ol><li>在当前会话中配置它：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sysctl</span> <span class="token assign-left variable">vm.swappiness</span><span class="token operator">=</span><span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编辑 <code>/etc/sysctl.conf</code> 使其永久化：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">vm.swappiness</span><span class="token operator">=</span><span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="优化-puma" tabindex="-1"><a class="header-anchor" href="#优化-puma" aria-hidden="true">#</a> 优化 Puma</h2><p>这是一项实验性 Alpha 功能，如有更改，恕不另行通知。该功能尚未准备好用于生产用途。如果您想使用此功能，我们建议您先使用非生产数据进行测试。</p><p>默认情况下，GitLab 使用旨在处理许多并发连接的配置运行。</p>`,10),P={href:"https://github.com/puma/puma#clustered-mode",target:"_blank",rel:"noopener noreferrer"},M=t(`<p>在 <code>/etc/gitlab/gitlab.rb</code> 中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>puma<span class="token punctuation">[</span><span class="token string">&#39;worker_processes&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们观察到以这种方式配置 Puma 内存使用量减少了 100-400MB。</p><h2 id="优化-sidekiq" tabindex="-1"><a class="header-anchor" href="#优化-sidekiq" aria-hidden="true">#</a> 优化 Sidekiq</h2><p>Sidekiq 是一个后台处理守护进程。 默认情况下使用 GitLab 配置时，它以 <code>50</code> 的高并发模式运行。这确实会影响它在给定时间可以分配多少内存。建议将其配置为使用显着较小的 <code>5</code> 或 <code>10</code>（首选）值。</p><p>在 <code>/etc/gitlab/gitlab.rb</code> 中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sidekiq<span class="token punctuation">[</span><span class="token string">&#39;max_concurrency&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="优化-gitaly" tabindex="-1"><a class="header-anchor" href="#优化-gitaly" aria-hidden="true">#</a> 优化 Gitaly</h2><p>Gitaly 是一种存储服务，允许高效访问基于 Git 的存储库。建议配置 Gitaly 强制执行的最大并发和内存限制。</p><p>在 <code>/etc/gitlab/gitlab.rb</code> 中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitaly<span class="token punctuation">[</span><span class="token string">&#39;ruby_max_rss&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> 200_000_000
gitaly<span class="token punctuation">[</span><span class="token string">&#39;concurrency&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token string">&#39;rpc&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;/gitaly.SmartHTTPService/PostReceivePack&quot;</span>,
    <span class="token string">&#39;max_per_repo&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">3</span>
  <span class="token punctuation">}</span>, <span class="token punctuation">{</span>
    <span class="token string">&#39;rpc&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;/gitaly.SSHService/SSHUploadPack&quot;</span>,
    <span class="token string">&#39;max_per_repo&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">3</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_repositories_count&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_mountpoint&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;/sys/fs/cgroup&#39;</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_hierarchy_root&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;gitaly&#39;</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_memory_bytes&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">500000</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_cpu_shares&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">512</span>

gitaly<span class="token punctuation">[</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;GITALY_COMMAND_SPAWN_MAX_PARALLEL&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;2&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="禁用监控" tabindex="-1"><a class="header-anchor" href="#禁用监控" aria-hidden="true">#</a> 禁用监控</h2><p>GitLab 默认启用所有服务，无需任何额外配置即可提供完整的 DevOps 解决方案。 一些默认服务，如监控，对于 GitLab 的运行来说不是必不可少的，可以禁用以节省内存。</p><p>在 <code>/etc/gitlab/gitlab.rb</code> 中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>prometheus_monitoring<span class="token punctuation">[</span><span class="token string">&#39;enable&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们观察到以这种方式配置 GitLab 减少了 200MB 的内存使用量。</p><h2 id="配置-gitlab-如何处理内存" tabindex="-1"><a class="header-anchor" href="#配置-gitlab-如何处理内存" aria-hidden="true">#</a> 配置 GitLab 如何处理内存</h2><p>GitLab 由许多组件（用 Ruby 和 Go 编写）组成，其中 GitLab Rails 是最大的一个，占用的内存最多。</p>`,18),B={href:"https://github.com/jemalloc/jemalloc",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/jemalloc/jemalloc",target:"_blank",rel:"noopener noreferrer"},C=t(`<p>在 <code>/etc/gitlab/gitlab.rb</code> 中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;MALLOC_CONF&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;dirty_decay_ms:1000,muzzy_decay_ms:1000&#39;</span>
<span class="token punctuation">}</span>

gitaly<span class="token punctuation">[</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;MALLOC_CONF&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;dirty_decay_ms:1000,muzzy_decay_ms:1000&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在应用程序执行期间观察到更稳定的内存使用情况。</p><h2 id="禁用额外的应用程序内监控" tabindex="-1"><a class="header-anchor" href="#禁用额外的应用程序内监控" aria-hidden="true">#</a> 禁用额外的应用程序内监控</h2><p>GitLab 使用内部数据结构来衡量自身的不同方面。如果禁用监控，则不再需要这些功能。</p><p>要禁用这些功能，您需要转到 GitLab 的管理中心并禁用 Prometheus Metrics 功能：</p><ol><li>进入 GitLab 网页界面。</li><li>在顶部栏上，选择 <strong>主菜单 &gt; 管理员</strong>。</li><li>在左侧边栏上，选择 <strong>设置 &gt; 指标与分析</strong>。</li><li>展开 <strong>指标 - Prometheus</strong>。</li><li>禁用 <strong>启用 Prometheus 指标</strong>。</li><li>选择 <strong>保存更改</strong>。</li></ol><h2 id="包含所有更改的配置" tabindex="-1"><a class="header-anchor" href="#包含所有更改的配置" aria-hidden="true">#</a> 包含所有更改的配置</h2><ol><li>如果您应用到目前为止描述的所有内容，您的 <code>/etc/gitlab/gitlab.rb</code> 文件应该包含以下配置：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>puma<span class="token punctuation">[</span><span class="token string">&#39;worker_processes&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

sidekiq<span class="token punctuation">[</span><span class="token string">&#39;max_concurrency&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>

prometheus_monitoring<span class="token punctuation">[</span><span class="token string">&#39;enable&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>

gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;MALLOC_CONF&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;dirty_decay_ms:1000,muzzy_decay_ms:1000&#39;</span>
<span class="token punctuation">}</span>

gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_repositories_count&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_mountpoint&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;/sys/fs/cgroup&#39;</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_hierarchy_root&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;gitaly&#39;</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_memory_bytes&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">500000</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;cgroups_cpu_shares&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">512</span>

gitaly<span class="token punctuation">[</span><span class="token string">&#39;concurrency&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
    <span class="token string">&#39;rpc&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;/gitaly.SmartHTTPService/PostReceivePack&quot;</span>,
    <span class="token string">&#39;max_per_repo&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">3</span>
    <span class="token punctuation">}</span>, <span class="token punctuation">{</span>
    <span class="token string">&#39;rpc&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;/gitaly.SSHService/SSHUploadPack&quot;</span>,
    <span class="token string">&#39;max_per_repo&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">3</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
gitaly<span class="token punctuation">[</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;MALLOC_CONF&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;dirty_decay_ms:1000,muzzy_decay_ms:1000&#39;</span>,
    <span class="token string">&#39;GITALY_COMMAND_SPAWN_MAX_PARALLEL&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;2&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进行所有这些更改后，重新配置GitLab 以使用新设置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> gitlab-ctl reconfigure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此操作可能需要一段时间，因为到目前为止，GitLab 无法使用内存保守设置。</p>`,13);function q(O,z){const a=o("ExternalLinkIcon");return i(),l("div",null,[r,u,d,s("p",null,[n("通过一些调整，GitLab 可以在比"),s("a",k,[n("最低要求"),e(a)]),n("中描述的规格低得多的规格下舒适地运行。")]),b,s("p",null,[n("有许多工具可以让您验证基于 Linux 的系统的性能。可以帮助检查系统性能的项目之一是 "),s("a",m,[n("sbc-bench"),e(a)]),n("。它描述了系统测试的所有注意事项以及不同行为对系统性能的影响，这在嵌入式系统中运行 GitLab 时尤其重要。它可以用作一种验证系统性能是否足以在受限环境中运行GitLab 的方法。")]),g,s("ul",null,[s("li",null,[s("a",v,[n("Raspberry PI 4 2GB"),e(a)]),n(".")]),s("li",null,[s("a",h,[n("DigitalOcean Basic 2GB with SSD"),e(a)]),n(".")]),s("li",null,[s("a",_,[n("Scaleway DEV1-S 2GB/20GB"),e(a)]),n(".")]),s("li",null,[s("a",y,[n("GCS e2-small"),e(a)]),n(".")])]),f,G,L,x,s("ul",null,[s("li",null,[s("a",w,[n("如何在 Ubuntu 20.04 配置 swap 空间"),e(a)])]),s("li",null,[s("a",S,[n("如何在 CentOS 7 配置 swap 空间"),e(a)])])]),A,s("p",null,[n("对于不需要高吞吐量的小型安装，考虑禁用 Puma "),s("a",P,[n("集群模式"),e(a)]),n("。 结果，只有一个 Puma 进程可以为应用程序提供服务。")]),M,s("p",null,[n("GitLab Rails 使用 "),s("a",B,[n("jemalloc"),e(a)]),n(" 作为内存分配器。"),s("a",R,[n("jemalloc"),e(a)]),n(" 以更大的块预分配内存，这些块也被保留更长的时间以提高性能。以牺牲一些性能为代价，您可以将 GitLab 配置为在不再需要内存后立即释放内存，而不是将其保留更长的时间。")]),C])}const T=p(c,[["render",q],["__file","gitlab_optimize.html.vue"]]);export{T as default};
