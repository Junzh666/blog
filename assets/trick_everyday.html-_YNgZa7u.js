import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as n}from"./app-V8cbPLlB.js";const i={},c=n(`<h2 id="http-server" tabindex="-1"><a class="header-anchor" href="#http-server" aria-hidden="true">#</a> http.server</h2><p>在linux系统中，可以通过很多工具和服务传输文件，如ftp、ssh等，如果我们需要快速将某些文件传输给某人，又不想搭建或创建新的用户，可以用下面的命令创建一个web下载页面。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 <span class="token parameter variable">-m</span> http.server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>它会为<strong>当前</strong>目录下创建一个web下载页面，端口默认是<code>8000</code>。当用户下载完毕后，使用<code>CTRL+c</code>关闭下载页。</p><h2 id="ipert3" tabindex="-1"><a class="header-anchor" href="#ipert3" aria-hidden="true">#</a> ipert3</h2><p>iperf3 是一个网络性能测试工具，它可以测量 TCP 和 UDP 带宽质量。安装iperf3的方法非常简单：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> iperf3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方法：</p><ul><li>在服务器A上执行:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>iperf3 <span class="token parameter variable">-s</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在服务区B上执行：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>iperf3 <span class="token parameter variable">-c</span> <span class="token operator">&lt;</span>server A <span class="token function">ip</span> <span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会看到两台服务器之间的网络传输带宽和质量。</p><h2 id="cloc" tabindex="-1"><a class="header-anchor" href="#cloc" aria-hidden="true">#</a> cloc</h2><p>cloc（Count Lines of Code）是一个用于统计源代码行数的命令行工具，可以统计空白行、注释行和实际代码行。</p><p>常见用法：</p><ol><li><p>统计单个文件的代码行数：<code>cloc filename</code></p></li><li><p>统计多个文件的代码行数：<code>cloc filename1 filename2</code></p></li><li><p>统计目录中所有文件的代码行数：<code>cloc directory_name</code></p></li><li><p>排除某些文件或目录：<code>cloc --exclude-dir=dir1,dir2 --exclude-ext=ext1,ext2 directory_name</code></p></li><li><p>对比两个版本的代码差异：<code>cloc --diff file_v1 file_v2</code></p></li><li><p>如果要统计在当前目录下所有 Python文件的行数: <code>cloc --include-lang=Python</code></p></li></ol>`,17),l=[c];function d(r,o){return a(),s("div",null,l)}const u=e(i,[["render",d],["__file","trick_everyday.html.vue"]]);export{u as default};
